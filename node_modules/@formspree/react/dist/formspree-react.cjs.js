'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _asyncToGenerator = require('@babel/runtime/helpers/asyncToGenerator');
var _slicedToArray = require('@babel/runtime/helpers/slicedToArray');
var _regeneratorRuntime = require('@babel/runtime/regenerator');
var React = require('react');
var core = require('@formspree/core');
var stripeJs = require('@stripe/stripe-js');
var _typeof = require('@babel/runtime/helpers/typeof');
var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var reactStripeJs = require('@stripe/react-stripe-js');
var _objectWithoutProperties = require('@babel/runtime/helpers/objectWithoutProperties');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

function _interopNamespace(e) {
  if (e && e.__esModule) return e;
  var n = Object.create(null);
  if (e) {
    Object.keys(e).forEach(function (k) {
      if (k !== 'default') {
        var d = Object.getOwnPropertyDescriptor(e, k);
        Object.defineProperty(n, k, d.get ? d : {
          enumerable: true,
          get: function () { return e[k]; }
        });
      }
    });
  }
  n["default"] = e;
  return Object.freeze(n);
}

var _asyncToGenerator__default = /*#__PURE__*/_interopDefaultLegacy(_asyncToGenerator);
var _slicedToArray__default = /*#__PURE__*/_interopDefaultLegacy(_slicedToArray);
var _regeneratorRuntime__default = /*#__PURE__*/_interopDefaultLegacy(_regeneratorRuntime);
var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var _typeof__default = /*#__PURE__*/_interopDefaultLegacy(_typeof);
var _defineProperty__default = /*#__PURE__*/_interopDefaultLegacy(_defineProperty);
var _objectWithoutProperties__default = /*#__PURE__*/_interopDefaultLegacy(_objectWithoutProperties);

var Elements = /*#__PURE__*/React.lazy(function () {
  return Promise.resolve().then(function () { return /*#__PURE__*/_interopNamespace(require('@stripe/react-stripe-js')); }).then(function (module) {
    return {
      "default": module.Elements
    };
  });
});
var FormspreeContext = /*#__PURE__*/React__default["default"].createContext({
  client: undefined
});
FormspreeContext.displayName = 'Formspree';
var stripePromise;

var getStripe = function getStripe(stripeKey) {
  if (!stripePromise) {
    stripePromise = stripeJs.loadStripe(stripeKey);
  }

  return stripePromise;
};

var handleCreateClient = function handleCreateClient(promise, project) {
  var config = {};

  if (promise) {
    config.stripePromise = promise;
  }

  if (project) {
    config.project = project;
  }

  return core.createClient(config);
};

var FormspreeProvider = function FormspreeProvider(props) {
  var _useState = React.useState(undefined),
      _useState2 = _slicedToArray__default["default"](_useState, 2),
      stateStripePromise = _useState2[0],
      setStateStripePromise = _useState2[1];

  var _useState3 = React.useState(handleCreateClient(stateStripePromise, props.project)),
      _useState4 = _slicedToArray__default["default"](_useState3, 2),
      client = _useState4[0],
      setClient = _useState4[1];

  React.useEffect(function () {
    client.startBrowserSession();
    return function () {
      client.teardown();
    };
  }, []);
  React.useEffect(function () {
    var getStripePromise = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee() {
        var promiseStripe;
        return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return getStripe(props.stripePK);

              case 2:
                promiseStripe = _context.sent;
                setStateStripePromise(promiseStripe);

              case 4:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));

      return function getStripePromise() {
        return _ref.apply(this, arguments);
      };
    }();

    if (props.stripePK) {
      getStripePromise();
    }
  }, [props.stripePK]);
  React.useEffect(function () {
    if (stateStripePromise) {
      setClient(handleCreateClient(stateStripePromise, props.project));
    }
  }, [stateStripePromise]);
  return /*#__PURE__*/React__default["default"].createElement(FormspreeContext.Provider, {
    value: {
      client: client
    }
  }, props.stripePK ? /*#__PURE__*/React__default["default"].createElement(React__default["default"].Fragment, null, stateStripePromise && /*#__PURE__*/React__default["default"].createElement(React.Suspense, {
    fallback: /*#__PURE__*/React__default["default"].createElement("p", null, "....")
  }, /*#__PURE__*/React__default["default"].createElement(Elements, {
    stripe: stateStripePromise
  }, /*#__PURE__*/React__default["default"].createElement(React__default["default"].Fragment, null, props.children)))) : /*#__PURE__*/React__default["default"].createElement(React__default["default"].Fragment, null, props.children));
};
function useFormspree() {
  var context = React.useContext(FormspreeContext);
  return context.client ? context : {
    client: core.getDefaultClient()
  };
}

var version = "2.3.3";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty__default["default"](target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var isEvent = function isEvent(data) {
  return data.preventDefault !== undefined;
};

var useForm = function useForm(formKey) {
  var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  var _useState = React.useState(false),
      _useState2 = _slicedToArray__default["default"](_useState, 2),
      submitting = _useState2[0],
      setSubmitting = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = _slicedToArray__default["default"](_useState3, 2),
      succeeded = _useState4[0],
      setSucceeded = _useState4[1];

  var _useState5 = React.useState([]),
      _useState6 = _slicedToArray__default["default"](_useState5, 2),
      errors = _useState6[0],
      setErrors = _useState6[1];

  var formspreeContext = useFormspree();
  var client = args.client || formspreeContext;
  var stripe;
  var elements;

  if (!client) {
    throw new Error('You must provide a Formspree client');
  }

  if (!formKey) {
    throw new Error('You must provide a form key or hashid ' + '(e.g. useForm("myForm") or useForm("123xyz")');
  }

  if (formspreeContext.client && formspreeContext.client.stripePromise) {
    stripe = reactStripeJs.useStripe();
    elements = reactStripeJs.useElements();
  }

  var debug = !!args.debug;
  var extraData = args.data;

  var reset = function reset() {
    setSubmitting(false);
    setSucceeded(false);
    setErrors([]);
  };

  var handleSubmit = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee3(submissionData) {
      var getFormData, formData, appendExtraData, prop, extraDataValue, createPaymentMethod;
      return _regeneratorRuntime__default["default"].wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              getFormData = /*#__PURE__*/function () {
                var _ref2 = _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee(event) {
                  var form;
                  return _regeneratorRuntime__default["default"].wrap(function _callee$(_context) {
                    while (1) {
                      switch (_context.prev = _context.next) {
                        case 0:
                          event.preventDefault();
                          form = event.target;

                          if (!(form.tagName != 'FORM')) {
                            _context.next = 4;
                            break;
                          }

                          throw new Error('submit was triggered for a non-form element');

                        case 4:
                          return _context.abrupt("return", new FormData(form));

                        case 5:
                        case "end":
                          return _context.stop();
                      }
                    }
                  }, _callee);
                }));

                return function getFormData(_x2) {
                  return _ref2.apply(this, arguments);
                };
              }();

              if (!isEvent(submissionData)) {
                _context3.next = 7;
                break;
              }

              _context3.next = 4;
              return getFormData(submissionData);

            case 4:
              _context3.t0 = _context3.sent;
              _context3.next = 8;
              break;

            case 7:
              _context3.t0 = submissionData;

            case 8:
              formData = _context3.t0;

              appendExtraData = function appendExtraData(prop, value) {
                if (formData instanceof FormData) {
                  formData.append(prop, value);
                } else {
                  formData = Object.assign(formData, _defineProperty__default["default"]({}, prop, value));
                }
              }; // Append extra data from config


              if (!(_typeof__default["default"](extraData) === 'object')) {
                _context3.next = 26;
                break;
              }

              _context3.t1 = _regeneratorRuntime__default["default"].keys(extraData);

            case 12:
              if ((_context3.t2 = _context3.t1()).done) {
                _context3.next = 26;
                break;
              }

              prop = _context3.t2.value;

              if (!(typeof extraData[prop] === 'function')) {
                _context3.next = 23;
                break;
              }

              extraDataValue = extraData[prop].call(null);

              if (!(extraDataValue instanceof Promise)) {
                _context3.next = 20;
                break;
              }

              _context3.next = 19;
              return extraDataValue;

            case 19:
              extraDataValue = _context3.sent;

            case 20:
              if (extraDataValue !== undefined) {
                appendExtraData(prop, extraDataValue);
              }

              _context3.next = 24;
              break;

            case 23:
              appendExtraData(prop, extraData[prop]);

            case 24:
              _context3.next = 12;
              break;

            case 26:
              createPaymentMethod = /*#__PURE__*/function () {
                var _ref3 = _asyncToGenerator__default["default"]( /*#__PURE__*/_regeneratorRuntime__default["default"].mark(function _callee2() {
                  var address, payload;
                  return _regeneratorRuntime__default["default"].wrap(function _callee2$(_context2) {
                    while (1) {
                      switch (_context2.prev = _context2.next) {
                        case 0:
                          address = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, formData.address_line1 && {
                            line1: formData.address_line1
                          }), formData.address_line2 && {
                            line2: formData.address_line2
                          }), formData.address_city && {
                            city: formData.address_city
                          }), formData.address_country && {
                            country: formData.address_country
                          }), formData.address_state && {
                            state: formData.address_state
                          }), formData.address_postal_code && {
                            postal_code: formData.address_postal_code
                          });
                          _context2.next = 3;
                          return stripe.createPaymentMethod({
                            type: 'card',
                            card: elements.getElement(reactStripeJs.CardElement),
                            billing_details: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, formData.name && {
                              name: formData.name
                            }), formData.email && {
                              email: formData.email
                            }), formData.phone && {
                              phone: formData.phone
                            }), address && {
                              address: address
                            })
                          });

                        case 3:
                          payload = _context2.sent;
                          return _context2.abrupt("return", payload);

                        case 5:
                        case "end":
                          return _context2.stop();
                      }
                    }
                  }, _callee2);
                }));

                return function createPaymentMethod() {
                  return _ref3.apply(this, arguments);
                };
              }();

              setSubmitting(true);
              return _context3.abrupt("return", formspreeContext.client.submitForm(formKey, formData, {
                endpoint: args.endpoint,
                clientName: "@formspree/react@".concat(version),
                createPaymentMethod: formspreeContext.client && formspreeContext.client.stripePromise ? createPaymentMethod : undefined
              }).then(function (result) {
                var status = result.response.status;
                var body;

                if (status === 200) {
                  if (debug) console.log('Form submitted', result);
                  setSucceeded(true);
                  setErrors([]);
                } else if (status >= 400 && status < 500) {
                  body = result.body;
                  if (body.errors) setErrors(body.errors);
                  if (debug) console.log('Validation error', result);
                  setSucceeded(false);
                } else {
                  if (debug) console.log('Unexpected error', result);
                  setSucceeded(false);
                }

                return result;
              })["catch"](function (error) {
                if (debug) console.log('Unexpected error', error);
                setSucceeded(false);
                throw error;
              })["finally"](function () {
                setSubmitting(false);
              }));

            case 29:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function handleSubmit(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  return [{
    submitting: submitting,
    succeeded: succeeded,
    errors: errors
  }, handleSubmit, reset];
};

var _excluded = ["prefix", "field", "errors"];
var ValidationError = function ValidationError(props) {
  var prefix = props.prefix,
      field = props.field,
      errors = props.errors,
      attrs = _objectWithoutProperties__default["default"](props, _excluded);

  var error = (errors || []).find(function (error) {
    return error.field == field;
  });

  if (!error) {
    return null;
  }

  return /*#__PURE__*/React__default["default"].createElement("div", attrs, prefix, " ", error.message);
};

Object.defineProperty(exports, 'CardElement', {
  enumerable: true,
  get: function () { return reactStripeJs.CardElement; }
});
exports.FormspreeProvider = FormspreeProvider;
exports.ValidationError = ValidationError;
exports.useForm = useForm;
exports.useFormspree = useFormspree;
